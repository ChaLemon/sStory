// Generated by CoffeeScript 1.6.2
var sStory, sStoryEditor;

sStory = (function() {
  function sStory(story_list) {
    this.story_list = story_list;
    if (this.story_list === void 0) {
      throw "No story_list defined";
    }
  }

  sStory.prototype.render = function() {
    var $content;

    $content = $('#content');
    $content.html("");
    _.each(this.story_list, function(section, i) {
      var sectionContent;

      sectionContent = JSON.stringify(section);
      return $content.append($("<h2>" + sectionContent + "</h2>"));
    });
    return this.story_list;
  };

  sStory.prototype.list = function() {
    return this.story_list;
  };

  return sStory;

})();

sStoryEditor = (function() {
  function sStoryEditor(story) {
    this.story = story;
    this.story_list = this.story.list();
    this.sectionTypes = {
      photo: {
        photoBigText: {
          inputs: ['url', 'title']
        },
        photoCaption: {
          inputs: ['url', 'caption', 'title']
        }
      },
      video: {
        videoYouTube: {
          inputs: ['embedCode', 'caption']
        },
        videoVimeo: {
          inputs: ['embedCode', 'caption']
        }
      },
      sound: {
        soundSoundcloud: {
          inputs: ['embedCode', 'title']
        }
      },
      location: {
        locationSinglePlace: {
          inputs: ['address', 'caption', 'photo']
        }
      }
    };
    this.renderList();
    this.renderSectionTypeSelector();
  }

  sStoryEditor.prototype.renderSectionTypeSelector = function() {
    var $select;

    $select = $("#new-section-type");
    _.each(_.keys(this.sectionTypes), function(sectionType) {
      var $option;

      $option = $('<option value="' + sectionType + '">' + sectionType + '</option>');
      return $select.append($option);
    });
    return this.renderSectionEditor();
  };

  sStoryEditor.prototype.renderSectionEditor = function() {
    var $editor, templates;

    templates = {};
    $(".editor-template").each(function() {
      var templateSource;

      templateSource = $(this).html();
      return templates[$(this).attr('id')] = Handlebars.compile(templateSource);
    });
    console.log("templates!!", templates);
    return $editor = $("#editor-inputs");
  };

  sStoryEditor.prototype.renderList = function() {
    var $content, $sortable;

    $content = $('#section-list');
    $content.html("");
    _.each(this.story_list, function(section, i) {
      var sectionContent;

      sectionContent = JSON.stringify(section);
      return $content.append($("<li>" + sectionContent + "</li>"));
    });
    $sortable = $content.sortable();
    return $sortable.bind('sortupdate', function() {
      var sortableSet;

      console.log("re-sort!", $(this));
      return sortableSet = true;
    });
  };

  sStoryEditor.prototype.addSection = function(section) {
    var newSectionNum, sectionCount;

    sectionCount = d3.max(_.keys(this.story.list()));
    console.log("count:", sectionCount);
    newSectionNum = (+sectionCount) + 1;
    this.story_list[newSectionNum] = {
      title: "Section " + (newSectionNum + 1),
      type: "photo1"
    };
    this.renderList();
    return this.story.render();
  };

  return sStoryEditor;

})();

$(document).ready(function() {
  var story, storyEditor, story_list;

  story_list = {
    0: {
      title: "Section1",
      type: "photo1"
    },
    1: {
      title: "Section2",
      type: "photo2"
    }
  };
  story = new sStory(story_list);
  story.render();
  storyEditor = new sStoryEditor(story);
  return d3.select("#add-section").on("click", function() {
    return storyEditor.addSection();
  });
});
